// <auto-generated />
using System;
using FAI.Persistence.Repositories.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FAI.Persistence.Migrations
{
    [DbContext(typeof(MovieDbContext))]
    [Migration("20251008185651_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FAI.Core.Entities.Movies.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Science Fiction"
                        });
                });

            modelBuilder.Entity("FAI.Core.Entities.Movies.MediumType", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Code");

                    b.ToTable("MediumTypes");

                    b.HasData(
                        new
                        {
                            Code = "DVD",
                            Name = "Digital Versatile Disc"
                        },
                        new
                        {
                            Code = "BD",
                            Name = "Blu-ray Disc"
                        },
                        new
                        {
                            Code = "4K",
                            Name = "4K Ultra HD Blu Ray"
                        },
                        new
                        {
                            Code = "DIGI",
                            Name = "Digital Copy"
                        },
                        new
                        {
                            Code = "VHS",
                            Name = "Video Home System"
                        },
                        new
                        {
                            Code = "STR",
                            Name = "Streaming"
                        });
                });

            modelBuilder.Entity("FAI.Core.Entities.Movies.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("MediumTypeCode")
                        .HasColumnType("nvarchar(8)");

                    b.Property<decimal>("Price")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(19, 2)
                        .HasColumnType("decimal(19,2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId")
                        .HasDatabaseName("IX_Movie_GenreId");

                    b.HasIndex("MediumTypeCode")
                        .HasDatabaseName("IX_Movie_MediumTypeCode");

                    b.HasIndex("Title")
                        .HasDatabaseName("IX_Movie_Title");

                    b.ToTable("Movie", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            GenreId = 5,
                            MediumTypeCode = "BD",
                            Price = 14.99m,
                            ReleaseDate = new DateTime(2010, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Inception"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            GenreId = 1,
                            MediumTypeCode = "4K",
                            Price = 19.99m,
                            ReleaseDate = new DateTime(2008, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Dark Knight"
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            GenreId = 4,
                            MediumTypeCode = "BD",
                            Price = 12.99m,
                            ReleaseDate = new DateTime(1980, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Shining"
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            GenreId = 4,
                            MediumTypeCode = "STR",
                            Price = 9.99m,
                            ReleaseDate = new DateTime(2017, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Get Out"
                        },
                        new
                        {
                            Id = new Guid("66666666-6666-6666-6666-666666666666"),
                            GenreId = 3,
                            MediumTypeCode = "DVD",
                            Price = 11.99m,
                            ReleaseDate = new DateTime(1994, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Shawshank Redemption"
                        },
                        new
                        {
                            Id = new Guid("77777777-7777-7777-7777-777777777777"),
                            GenreId = 3,
                            MediumTypeCode = "BD",
                            Price = 13.99m,
                            ReleaseDate = new DateTime(1994, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Forrest Gump"
                        },
                        new
                        {
                            Id = new Guid("88888888-8888-8888-8888-888888888888"),
                            GenreId = 2,
                            MediumTypeCode = "DVD",
                            Price = 8.99m,
                            ReleaseDate = new DateTime(2007, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Superbad"
                        },
                        new
                        {
                            Id = new Guid("99999999-9999-9999-9999-999999999999"),
                            GenreId = 2,
                            MediumTypeCode = "DIGI",
                            Price = 10.99m,
                            ReleaseDate = new DateTime(2009, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Hangover"
                        });
                });

            modelBuilder.Entity("FAI.Core.Entities.Movies.Movie", b =>
                {
                    b.HasOne("FAI.Core.Entities.Movies.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FAI.Core.Entities.Movies.MediumType", "MediumType")
                        .WithMany("Movies")
                        .HasForeignKey("MediumTypeCode")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Genre");

                    b.Navigation("MediumType");
                });

            modelBuilder.Entity("FAI.Core.Entities.Movies.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("FAI.Core.Entities.Movies.MediumType", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
